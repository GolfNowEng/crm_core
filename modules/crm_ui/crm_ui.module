<?php 

/**
 * Implements hook_menu().
 */
function crm_ui_menu() {
  $items = array();
 
  /**
   * Base CRM menu
   */
  $items['crm'] = array(
    'title' => 'CRM',
    'page callback' => 'crm_dashboard',
    'access arguments' => array('view crm dashboard'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages/crm_ui.pages.inc',
  );

  /*
   * Contacts
   */
  $items['crm/contact/%crm_contact'] = array(
    'title' => 'Contact',
    'page callback' => 'crm_contact_view',
    'page arguments' => array(2),
    'access arguments' => array('view contacts'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/view'] = array(
    'title' => 'View',
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  $items['crm/contact/%crm_contact/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );
  
  $items['crm/contact/%crm_contact/revert/%'] = array(
    'title' => 'Contact',
    'page callback' => 'crm_contact_revert',
    'page arguments' => array(2, 4),
    'access arguments' => array('view contacts'),
    'type' => MENU_CALLBACK,
    'file' => 'pages/contact.pages.inc',
  );  

  $items['crm/contact/%crm_contact/revisions'] = array(
    'title' => 'Revisions',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_revision_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_delete_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/add'] = array(
    'title' => 'Add a contact',
    'description' => 'Add a new contact to the CRM.',
    'page callback' => 'crm_contact_add_page',
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
    'file' => 'pages/contact.pages.inc',
  );
  foreach (crm_contact_types() as $type => $contact_type) {
    $items['crm/contact/add/' . $type] = array(
      'title' => 'Add @type',
      'title arguments' => array('@type' => $contact_type->name),
      'description' => $contact_type->description,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('crm_contact_form', crm_contact_type_new($type)),
      'access arguments' => array('add contacts'),
      'file' => 'pages/contact.pages.inc',
    );
  }
  
  
  /*
   * Contact Debug
   */
  if (module_exists('devel')) {
    $items['crm/contact/%crm_contact/devel'] = array(
      'title' => 'Devel',
      'page_callback' => 'crm_contact_devel_load_object',
      'page arguments' => array(2),
      'access arguments' => array('access devel information'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 100,
    );
    
    $items['crm/contact/%crm_contact/devel/load'] = array(
      'title' => 'Load',
      'type' => MENU_DEFAULT_LOCAL_TASK,
    );
    
    $items['crm/contact/%crm_contact/devel/render'] = array(
      'title' => 'Render',
      'page callback' => 'crm_contact_devel_render_object',
      'page arguments' => array(2),
      'access arguments' => array('access devel information'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 100,
    );
  }

  /*
   * Contact Activities
   */
  $items['crm/contact/%crm_contact/activity'] = array(
    'title' => 'Activity',
    'description' => 'View contact activity',
    'page callback' => 'crm_contact_activity',
    'page arguments' => array(2),
    'access arguments' => array('view contacts'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_activity.pages.inc',
  );

  $items['crm/contact/%crm_contact/activity/add'] = array(
    'title' => 'Add Activity',
    'description' => 'Add an activity to this contact',
    'page callback' => 'entity_ui_get_form',
    'page arguments' => array('crm_activity', NULL, 'add'),
    'access arguments' => array('add activities'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages/contact_activity.pages.inc',
  );


  $items['crm/activity/%crm_activity'] = array(
  );

  $items['crm/activity/%crm_activity/edit'] = array(
  );

  $items['crm/activity/%crm_activity/delete'] = array(
  );

  
  /*
   * Contact types
   */
  $items['crm/admin/contact/types'] = array(
    'title' => 'Manage contact types',
    'page callback' => 'crm_contact_types_overview',
    'access arguments' => array('administer contact types'),
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/add'] = array(
    'title' => 'Add contact type',
    'page callback' => 'crm_contact_type_form_wrapper',
    'page arguments' => array(crm_contact_type_new()),
    'access arguments' => array('administer contact types'),
    'type' => MENU_LOCAL_ACTION | MENU_VISIBLE_IN_BREADCRUMB,
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/%crm_contact_type'] = array(
    'title' => 'Edit contact type',
    'title callback' => 'crm_contact_type_title',
    'title arguments' => array(4),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_type_form', 4),
    'access arguments' => array('administer contact types'),
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/%crm_contact_type/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  $items['crm/admin/contact/types/%crm_contact_type/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_type_delete_confirm', 4),
    'access arguments' => array('administer contact types'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_types.pages.inc',
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function crm_ui_menu_alter(&$items) {
  // Transform the field UI tabs into contextual links.
  $items['crm/admin/contact/types/%crm_contact_type/fields']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
  $items['crm/admin/contact/types/%crm_contact_type/display']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
}

/**
 * Implements hook_admin_paths().
 */
function crm_ui_admin_paths() {
  $paths = array(
    'crm/admin' => TRUE,
    'crm/admin/*' => TRUE,
    'crm/admin/contact/types' => TRUE,
    'crm/admin/contact/types/*' => TRUE,
  );

  return $paths;
}

/**
 * Implemenets hook_theme().
 */
function crm_ui_theme() {
  $theme = array(
    'crm_contact_type_overview' => array(
      'variables' => array('contact_type' => NULL),
      'file' => 'theme/crm_ui_contact_type.theme.inc',
    ),
    'crm_contact_add_list' => array(
      'variables' => array('content' => array()),
      'file' => 'theme/crm_ui_contact.theme.inc',
    ),
    'crm_contact_revsions' => array(
      'variables' => array('contact_revisions' => array()),
      'file' => 'theme/crm_ui_contact.theme.inc',
    ),
  );

  return $theme;
}

/**
 * Implements hook_block_info().
 */
function crm_ui_block_info() {
  $blocks['navigation'] = array(
    'info' => t('CRM Navigaiton'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function crm_ui_block_view($delta) {
  module_load_include('inc', 'crm_ui', 'includes/crm_ui.blocks');
  
  $sub_func = 'crm_ui_block_' . $delta . '_subject';
  $con_func = 'crm_ui_block_' . $delta . '_content';

  if(!function_exists($sub_func) || !function_exists($con_func)) {
    return array();  
  } 
  
  return array(
    'subject' => $sub_func(),
    'content' => $con_func(),
  );
}




