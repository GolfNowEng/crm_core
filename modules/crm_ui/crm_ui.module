<?php

/**
 * Implements hook_menu().
 */
function crm_ui_menu() {
  $items = array();

  /**
   * Base CRM menu
   */
  $items['crm'] = array(
    'title' => 'CRM',
    'page callback' => 'crm_ui_placeholder',
    'access arguments' => array('view crm dashboard'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages/crm_ui.pages.inc',
  );

  $items['crm/dashboard'] = array(
    'title' => 'Dashboard',
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE,
  );

  /*
   * Contacts
   */
  $items['crm/contact/%crm_contact'] = array(
    'title' => 'Contact',
    'page callback' => 'crm_contact_view',
    'page arguments' => array(2),
    'title callback' => 'crm_contact_title',
    'title arguments' => array(2),
    'access arguments' => array('view contacts'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/view'] = array(
    'title' => 'View',
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  $items['crm/contact/%crm_contact/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/revert/%'] = array(
    'title' => 'Contact',
    'page callback' => 'crm_contact_revert',
    'page arguments' => array(2, 4),
    'access arguments' => array('view contacts'),
    'type' => MENU_CALLBACK,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/revisions'] = array(
    'title' => 'Revisions',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_revision_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/%crm_contact/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_delete_form', 2),
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact.pages.inc',
  );

  $items['crm/contact/add'] = array(
    'title' => 'Add a contact',
    'description' => 'Add a new contact to the CRM.',
    'page callback' => 'crm_contact_add_page',
    'access arguments' => array('add contacts'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE,
    'weight' => 10,
    'file' => 'pages/contact.pages.inc',
  );
  foreach (crm_contact_types() as $type => $contact_type) {
    $items['crm/contact/add/' . $type] = array(
      'title' => 'Add @type',
      'title arguments' => array('@type' => $contact_type->name),
      'description' => $contact_type->description,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('crm_contact_form', crm_contact_type_new($type)),
      'access arguments' => array('add contacts'),
      'file' => 'pages/contact.pages.inc',
    );
  }


  /*
   * Contact Debug
   */
  if (module_exists('devel')) {
    $items['crm/contact/%crm_contact/devel'] = array(
      'title' => 'Devel',
      'page_callback' => 'crm_contact_devel_load_object',
      'page arguments' => array(2),
      'access arguments' => array('access devel information'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 100,
    );

    $items['crm/contact/%crm_contact/devel/load'] = array(
      'title' => 'Load',
      'type' => MENU_DEFAULT_LOCAL_TASK,
    );

    $items['crm/contact/%crm_contact/devel/render'] = array(
      'title' => 'Render',
      'page callback' => 'crm_contact_devel_render_object',
      'page arguments' => array(2),
      'access arguments' => array('access devel information'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 100,
    );
  }

  /*
   * Contact Activities
   */
//  $items['crm/contact/%crm_contact/activity'] = array(
//    'title' => 'Activity',
//    'description' => 'View contact activity',
//    'page callback' => 'crm_contact_activity',
//    'page arguments' => array(2),
//    'access arguments' => array('view contacts'),
//    'type' => MENU_LOCAL_TASK,
//    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
//    'file' => 'pages/contact_activity.pages.inc',
//  );

  // Menu items for creation of new Activities.
  foreach (crm_activity_types() as $type => $info) {
    $items['crm/contact/%crm_contact/activity/add/' . $type] = array(
      'title' => 'Add Activity',
      'description' => 'Add an activity to this contact',
      'page callback' => 'crm_activity_entity_ui_get_form_wrapper',
      'page arguments' => array(2, 5),
      'access arguments' => array('add activities'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'pages/contact_activity.pages.inc',
    );
  }

  $items['crm/activity/%crm_activity'] = array(
  );

  $items['crm/activity/%crm_activity/edit'] = array(
  );

  $items['crm/activity/%crm_activity/delete'] = array(
  );

  $items['crm/admin'] = array(
    'title' => 'Administration',
    'page callback' => 'crm_ui_placeholder',
    'access arguments' => array('administer contact types'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE,
    'weight' => 10,
  );

  /*
   * Contact types
   */
  $items['crm/admin/contact/types'] = array(
    'title' => 'Manage contact types',
    'page callback' => 'crm_contact_types_overview',
    'access arguments' => array('administer contact types'),
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/add'] = array(
    'title' => 'Add contact type',
    'page callback' => 'crm_contact_type_form_wrapper',
    'page arguments' => array(crm_contact_type_new()),
    'access arguments' => array('administer contact types'),
    'type' => MENU_LOCAL_ACTION | MENU_VISIBLE_IN_BREADCRUMB,
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/%crm_contact_type'] = array(
    'title' => 'Edit contact type',
    'title callback' => 'crm_contact_type_title',
    'title arguments' => array(4),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_type_form', 4),
    'access arguments' => array('administer contact types'),
    'file' => 'pages/contact_types.pages.inc',
  );
  $items['crm/admin/contact/types/%crm_contact_type/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  $items['crm/admin/contact/types/%crm_contact_type/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_type_delete_confirm', 4),
    'access arguments' => array('administer contact types'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_types.pages.inc',
    'weight' => 10,
  );


  /*
   * Contact Relationships
   */
  $items['crm/contact/%crm_contact/relationships'] = array(
    'title' => 'Relationships',
    'description' => 'View contact relationships',
    'page callback' => 'crm_contact_relationships',
    'page arguments' => array(2),
    'access arguments' => array('view contacts'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_relationships.pages.inc',
  );

  $items['crm/contact/%crm_contact/relationships/add'] = array(
    'title' => 'Add Relationship',
    'description' => 'Add a relationship to this contact',
    'page callback' => 'crm_contact_relationships_add',
    'page arguments' => array(2),
    'access arguments' => array('add crm relationships'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_relationships.pages.inc',
  );

  $items['crm/contact/%crm_contact/relationships/add/%relation_type/%'] = array(
    'title' => 'Add Relationship',
    'description' => 'Add a relationship to this contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_relationships_add_form', 2, 5, 6),
    'access arguments' => array('add crm relationships'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'pages/contact_relationships.pages.inc',
  );

  $items['crm/contact/%crm_contact/relationships/add/%relation_type/%/autocomplete'] = array(
    'page callback' => 'crm_contact_relationships_add_autocomplete',
    'page arguments' => array(2, 5, 6),
    'access arguments' => array('add crm relationships'),
    'type' => MENU_CALLBACK,
    'file' => 'pages/contact_relationships.pages.inc',
  );


  /*
   * CRM Relationship settings
   */
  $items['crm/admin/relationship/settings'] = array(
    'title' => 'Relationship settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_relationship_settings'),
    'access arguments' => array('administer crm relationship'),
    'file' => 'pages/relationship_settings.pages.inc',
  );

  $items['crm/admin/relationship/types'] = array(
    'title' => 'Relationship types',
    'page callback' => 'crm_relationship_types_overview',
    'access arguments' => array('administer crm relationship'),
    'file' => 'pages/relationship_settings.pages.inc',
  );

  $items['crm/admin/relationship/types/add'] = array(
    'title' => 'Add relationship type',
    'access arguments' => array('administer crm relationship'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('relation_type_form'),
    'type' => MENU_LOCAL_ACTION,
    'file path' => drupal_get_path('module', 'relation'),
    'file' => '/relation.admin.inc',
  );


  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function crm_ui_menu_alter(&$items) {
  // Transform the field UI tabs into contextual links.
  $items['crm/admin/contact/types/%crm_contact_type/fields']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
  $items['crm/admin/contact/types/%crm_contact_type/display']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;

  // Make Views menu item local task.
  $items['crm/contact/%/activity/add']['type'] = MENU_LOCAL_ACTION;
  $items['crm/contact/%/activity/add']['title'] = t('Add Activity');

  // Alter Views menu item.
  $items['crm/contact/%/activity']['title'] = t('Activity');
  $items['crm/contact/%/activity']['type'] = MENU_LOCAL_TASK;
  $items['crm/contact/%/activity']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
}

/**
 * Implements hook_admin_paths().
 */
function crm_ui_admin_paths() {
  $paths = array(
    'crm/admin' => TRUE,
    'crm/admin/*' => TRUE,
    'crm/admin/contact/types' => TRUE,
    'crm/admin/contact/types/*' => TRUE,
  );

  return $paths;
}

/**
 * Implemenets hook_theme().
 */
function crm_ui_theme() {
  $theme = array(
    'crm_contact_type_overview' => array(
      'variables' => array('contact_type' => NULL),
      'file' => 'theme/crm_ui_contact_type.theme.inc',
    ),
    'crm_contact_add_list' => array(
      'variables' => array('content' => array()),
      'file' => 'theme/crm_ui_contact.theme.inc',
    ),
    'crm_contact_revsions' => array(
      'variables' => array('contact_revisions' => array()),
      'file' => 'theme/crm_ui_contact.theme.inc',
    ),
  );

  return $theme;
}

/**
 * Implements hook_block_info().
 */
function crm_ui_block_info() {
  $blocks['navigation'] = array(
    'info' => t('CRM Navigaiton'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function crm_ui_block_view($delta) {
  module_load_include('inc', 'crm_ui', 'includes/crm_ui.blocks');

  $sub_func = 'crm_ui_block_' . $delta . '_subject';
  $con_func = 'crm_ui_block_' . $delta . '_content';

  if(!function_exists($sub_func) || !function_exists($con_func)) {
    return array();
  }

  return array(
    'subject' => $sub_func(),
    'content' => $con_func(),
  );
}

/**
 * Implements hook_views_api().
 */
function crm_ui_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'crm_ui') . '/includes/views',
  );
}

/**
 * A placeholder function.
 */
 function crm_ui_placeholder() {
  return "This is a placeholder.";
 }

/**
 * Implements hook_form_FORM_ID_alter
 */
function crm_ui_form_relation_type_form_alter(&$form, &$form_state) {
  $relationship_types = variable_get('crm_relationship_types');
  $type = $form['relation_type']['#default_value'];
  $alter_edit = $alter_add = false;

  if (in_array($type, $relationship_types) && $relationship_types[$type]) {
    $alter_edit = true;
  }

  if (implode('/', arg()) == 'crm/admin/relationship/types/add') {
    $alter_add = true;
  }

  if ($alter_edit || $alter_add) {
    // TODO: update breadcrumb here

    // Hide unused fields
    $form['transitive']['#type'] = 'value';
    $form['transitive']['#default_value'] = 0;

    $form['r_unique']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 0;

    $form['min_arity']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 2;

    $form['max_arity']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 2;

    $contact_types = crm_contact_types();

    $options = array('crm_contact:*' => t('Any'));
    foreach ($contact_types as $contact_type) {
      $options['crm_contact:' . $contact_type->type] = t($contact_type->name);
    }

    $form['source_bundles']['#options'] = $options;
    $form['source_bundles']['#size'] = count ($options);
    $form['source_bundles']['#title'] = t('Source contacts types');

    $form['target_bundles']['#options'] = $options;
    $form['target_bundles']['#size'] = count ($options);
    $form['target_bundles']['#title'] = t('Destination contact types');

    $form['#submit'][] = 'crm_ui_form_relation_type_form_submit';
  }

}

/**
 * Submit handler for relation_type_form.
 */
function crm_ui_form_relation_type_form_submit($form, &$form_state) {
  $relationship_types = variable_get('crm_relationship_types', array());
  $relationship_types[$form_state['values']['relation_type']] = $form_state['values']['relation_type'];
  variable_set('crm_relationship_types', $relationship_types);
  $form_state['redirect'] = 'crm/admin/relationship/types';
}

/**
 * Implements hook_form_FORM_ID_alter
 */
function crm_ui_form_relation_type_delete_confirm_alter(&$form, &$form_state) {
  $relationship_types = variable_get('crm_relationship_types', array());
  if (isset($relationship_types[$form['relation_type']['#value']])) {
    $form['#submit'][] = 'crm_ui_form_relation_type_delete_confirm_submit';
  }
}

/**
 * Submit handler for relation_type_delete_confirm.
 */
function crm_ui_form_relation_type_delete_confirm_submit($form, &$form_state) {
  $relationship_types = variable_get('crm_relationship_types', array());
  unset($relationship_types[$form_state['values']['relation_type']]);
  variable_set('crm_relationship_types', $relationship_types);
  $form_state['redirect'] = 'crm/admin/relationship/types';
}
