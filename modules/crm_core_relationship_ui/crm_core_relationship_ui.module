<?php
/**
 * Implements hook_menu()
 */
function crm_core_relationship_ui_menu() {
  $items = array();
  
  /*
   * CRM Contact Relationships
   */
  $items['crm/contact/%crm_core_contact/relationships'] = array(
    'title' => 'Relationships',
    'description' => 'View contact relationships',
    'page callback' => 'crm_core_relationship_ui_contact_relationships',
    'page arguments' => array(2),
    'access arguments' => array('view contact relationships'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'crm_core_relationship_ui.pages.inc',
  );

  $items['crm/contact/%crm_core_contact/relationships/add'] = array(
    'title' => 'Add Contact Relationship',
    'description' => 'Add a relationship to this contact',
    'page callback' => 'crm_core_relationship_ui_add_relationship',
    'page arguments' => array(2),
    'access arguments' => array('add crm relationship'),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'crm_core_relationship_ui.pages.inc',
  );

  $items['crm/contact/%crm_core_contact/relationships/add/%relation_type/%'] = array(
    'title' => 'Add Contact Relationship',
    'description' => 'Add a relationship to this contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_core_relationship_ui_add_relationship_form', 2, 5, 6),
    'access arguments' => array('add contact relationships'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'crm_core_relationship_ui.pages.inc',
  );

  $items['crm/contact/%crm_core_contact/relationships/add/%relation_type/%/autocomplete'] = array(
    'page callback' => 'crm_core_relationship_ui_add_relationship_autocomplete',
    'page arguments' => array(2, 5, 6),
    'access arguments' => array('add contact relationships'),
    'type' => MENU_CALLBACK,
    'file' => 'crm_core_relationship_ui.pages.inc',
  );

  /*
   * CRM Relationship types
   */
  $items['admin/structure/crm/relationship-types'] = array(
    'title' => 'Relationship types',
    'page callback' => 'crm_core_relationship_ui_types_overview',
    'access arguments' => array('administer relation types'),
    'file' => 'crm_core_relationship_ui.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/structure/crm/relationship-types/add'] = array(
    'title' => 'Add relationship type',
    'access arguments' => array('administer relation types'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('relation_type_form'),
    'type' => MENU_LOCAL_ACTION,
    'file path' => drupal_get_path('module', 'relation'),
    'file' => '/relation.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_field_formatter_info_alter
 */
function crm_core_relationship_ui_field_formatter_info_alter(&$info) {
  // we will add our own field formatter
  // for display relationships
  $info['contact_relationship'] = array(
    'label' => t('Related Contact'),
    'field types' => array('relation_endpoint'),
    'module' => 'crm_core_relationship_ui',
  );
}

/**
 * Implements hook_field_formatter_view
 */
function crm_core_relationship_ui_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
   switch ($display['type']) {
    case 'contact_relationship':
    default:
    // getting the contact id from the url
    $current_contact_id = arg(2);
    $related_contact_id = ($items[1]['entity_id'] == $current_contact_id) ? $items[0]['entity_id'] : $items[1]['entity_id'];
    $related_contact = crm_core_contact_load($related_contact_id);
    $contact_label = entity_label('crm_core_contact', $related_contact);
    $relationship_type = ($items[1]['entity_id'] == $current_contact_id) ? crm_core_relationship_get_type_label($entity, TRUE) : crm_core_relationship_get_type_label($entity);
    $created = date('Y-m-d H:i:s', $entity->created);
    $related_contact_uri = entity_uri('crm_core_contact', $related_contact); 
    
    $rows[] = array(
      l($contact_label, $related_contact_uri['path'], $related_contact_uri['options']),
      $relationship_type,
      $created,
    );
      $headers = array('Related Contact', 'Relationship Type', 'Created');
      return array(
        '#theme' => 'table',
        '#header' => $headers,
        '#rows' => $rows,
      );
    break;  
  }
}

/**
 * Implements hook_form_alter.
 * Set breadcrumb.
 */
function crm_core_relationship_ui_form_alter(&$form, &$form_state, $form_id) {
  $type = '';
  
  switch ($form_id) {
    case 'relation_type_form':
    case 'field_ui_field_overview_form':
    case 'field_ui_display_overview_form':
    case 'relation_export_relation_type':
    case 'relation_type_delete_confirm':  
      $type = arg(4);
      module_load_include('inc', 'crm_core_relationship_ui');
      if (crm_core_relationship_is_relationship_type($type)) {
        $breadcrumb = array(
          l('Home', '<front>'),
          l('Administration', 'admin'),
          l('Structure', 'admin/structure'),
          l('CRM', 'admin/structure/crm'),
          l('Relationship types', 'admin/structure/crm/relationship-types')
        );
        if ($form_id != 'relation_type_form') {
          $type_obj = relation_type_load($type);
          $breadcrumb[] = l($type_obj->label, 'admin/structure/relation/manage/' . $type);
        }
        drupal_set_breadcrumb($breadcrumb);   
      }
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function crm_core_relationship_ui_form_relation_type_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'crm_core_relationship_ui');

  $type = $form['relation_type']['#default_value'];
  $alter_edit = $alter_add = false;

  if (crm_core_relationship_is_relationship_type($type)) {
    $alter_edit = true;
  }

  if (implode('/', arg()) == 'admin/structure/crm/relationship-types/add') {
    $alter_add = true;
  }

  if ($alter_edit || $alter_add) {
    // Hide unused fields and set defalt values
    $form['transitive']['#type'] = 'value';
    $form['transitive']['#default_value'] = 0;

    $form['r_unique']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 0;

    $form['min_arity']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 2;

    $form['max_arity']['#type'] = 'value';
    $form['r_unique']['#default_value'] = 2;

    $contact_types = crm_core_contact_types();

    $options = array('crm_core_contact:*' => t('Any'));
    foreach ($contact_types as $contact_type) {
      $options['crm_core_contact:' . $contact_type->type] = t($contact_type->name);
    }

    $form['source_bundles']['#options'] = $options;
    $form['source_bundles']['#size'] = count ($options);
    $form['source_bundles']['#title'] = t('Source contacts types');

    $form['target_bundles']['#options'] = $options;
    $form['target_bundles']['#size'] = count ($options);
    $form['target_bundles']['#title'] = t('Destination contact types');

    $form['#submit'][] = 'crm_core_relationship_ui_form_relation_type_form_submit';
  }

}

/**
 * Submit handler for relation_type_form.
 */
function crm_core_relationship_ui_form_relation_type_form_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/structure/crm/relationship-types';
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function crm_core_relationship_ui_form_relation_type_delete_confirm_alter(&$form, &$form_state) {
  module_load_include('inc', 'crm_core_relationship_ui');

  if (crm_core_relationship_is_relationship_type($form['relation_type']['#value'])) {
    $form['#submit'][] = 'crm_core_relationship_ui_form_relation_type_delete_confirm_submit';
  }
}

/**
 * Submit handler for relation_type_delete_confirm.
 */
function crm_core_relationship_ui_form_relation_type_delete_confirm_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/structure/crm/relationship-types';
}