<?php

/**
 * Implements hook_entity_info().
 */
function crm_activity_entity_info() {
  $return = array(
    'crm_activity' => array(
      'label' => t('Actvity'),
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIController',
      'base table' => 'crm_activity',
      'revision table' => 'crm_activity_revision',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'activity_id',
        'bundle' => 'type',
        'revision' => 'revision_id',
      ),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'bundles' => array(),
      'load hook' => 'crm_activity_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Activity'),
          'custom settings' => FALSE,
        ),
      ),
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'module' => 'crm_activity',
    ),
  );
  $return['crm_activity_type'] = array(
    'label' => t('Activity Type'),
    'entity class' => 'CRMActivityType',
    'controller class' => 'EntityAPIController',
    'base table' => 'crm_activity_type',
    'fieldable' => FALSE,
    'bundle of' => 'crm_activity',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'name' => 'type',
      'label' => 'label',
    ),
    'module' => 'crm_activity',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'crm/admin/activity/types',
      'file' => 'crm_activity.admin.inc',
    ),
    'access callback' => 'crm_activity_type_access',
  );

  return $return;
}

function crm_activity_type_access($op, $type = NULL, $account = NULL) {
  return user_access('administer activity types', $account);
}

function crm_activity_get_types($type_name = NULL) {
  $types = entity_load('crm_activity_type', isset($type_name) ? array($type_name) : FALSE);
  return isset($type_name) ? reset($types) : $types;
}

/**
 * Use a separate class for profile types so we can specify some defaults
 * modules may alter.
 */
class CRMActivityType extends Entity {
  public $type;
  public $label;
  public $weight = 0;

  public function __construct($values = array()) {
    parent::__construct($values, 'crm_activity_type');
  }

  function isLocked() {
    return isset($this->status) && empty($this->is_new) && (($this->status & ENTITY_IN_CODE) || ($this->status & ENTITY_FIXED));
  }
  
}

/**
 * Load a CRM Activity object.
 */
function crm_activity_load($activity_id, $reset = FALSE) {
  $activities = crm_activity_load_multiple(array($activity_id), array(), $reset);
  return reset($activities);
}

/**
 * Load multiple activities based on certain conditions.
 */
function crm_activity_load_multiple($activity_ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('crm_activity', $activity_ids, $conditions, $reset);
}


function crm_activity_create($values) {
  return new Entity($values, 'crm_activity');
}


function crm_activity_save($activity) {
  return entity_get_controller('crm_activity')->save($contact);
}


function crm_activity_delete($activity) {
  crm_acitivity_delete_multiple(array($activity->activity_id));
}


function crm_activity_delete_multiple($activity_ids) {
  entity_get_controller('crm_activity')->delete($activity_ids);
}
